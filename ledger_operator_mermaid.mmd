graph LR
    Client[Client / Player]:::client

    subgraph Ledger_Operator["Ledger Operator (Actor)"]
        direction TB
        Queue((Event Queue))
        Processor[[Process Events]]
        Snapshot((Table Snapshot\\ncurrent game state))
        Queue --> Processor --> Snapshot
    end

    Client -->|send event| Verifier[[Verifier]]
    Verifier -->|reject| Client
    Verifier -->|append| Queue
    Client -->|read snapshot| Snapshot

    subgraph Storage["Postgres Ledger Store"]
        Events[(Event Log)]
    end

    Processor -->|persist event & snapshot| Events
    Events -->|subscribe / replay| Subscribers[Subscribers]
    Subscribers --> Client

    Snapshot -->|broadcast updates| Subscribers
    Processor -. emits .-> PhaseNote{{Shuffling\\nDealing\\nBetting\\nShowdown phases}}

    classDef note fill:#ffe5b4,stroke:#ff8c00,color:#000;
    classDef client fill:#d9f2ff,stroke:#0082c8,color:#000;
    classDef subscriber fill:#f3f0ff,stroke:#6c4cff,color:#000;

    class PhaseNote note;
    class Client client;
    class Subscribers subscriber;
