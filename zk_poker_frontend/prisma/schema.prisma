// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* --- Enums (map to real Postgres enums) --- */
enum RoomStatus {
  waiting
  playing
  finished
}

enum ActorType {
  player
  shuffler
  system
}

enum TranscriptCategory {
  command
  event
  proof
  status
}

enum MemberRole {
  player
  spectator
}

/* --- Tables --- */

model Room {
  room_id            Int      @id @default(autoincrement())
  status             RoomStatus
  seats              Int      @default(6)
  required_shufflers Int      @default(5)
  owner_id           String?
  nonce              String?
  created_at         DateTime @default(now())

  members    RoomMember[]
  shufflers  RoomShuffler[]
  transcript Transcript[]
}

model RoomMember {
  room_id   Int
  user_id   String
  role      MemberRole
  seat      Int?
  pk_player String?
  joined_at DateTime @default(now())

  room Room @relation(fields: [room_id], references: [room_id], onDelete: Cascade)

  @@id([room_id, user_id])
  @@unique([room_id, seat], map: "uq_room_seat")
}

model RoomShuffler {
  room_id       Int
  shuffler_id   String
  pk_shuffle    String
  registered_at DateTime @default(now())

  room Room @relation(fields: [room_id], references: [room_id], onDelete: Cascade)

  @@id([room_id, shuffler_id])
}

model Transcript {
  seq             BigInt   @id @default(autoincrement())
  room_id         Int
  ts              DateTime @default(now())
  actor_type      ActorType
  actor_id        String
  category        TranscriptCategory
  kind            String
  correlation_id  String
  idempotency_key String?
  payload         Json     @default("{}")
  prev_hash       String?
  hash            String?

  room Room @relation(fields: [room_id], references: [room_id], onDelete: Cascade)

  @@index([room_id, seq], map: "idx_transcript_room_seq")
  @@index([room_id, correlation_id, seq], map: "idx_transcript_room_corr_seq")
  @@unique([room_id, actor_id, idempotency_key], map: "uq_idem_command")
}
