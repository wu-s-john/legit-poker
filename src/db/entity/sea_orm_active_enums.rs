//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "application_status")]
pub enum ApplicationStatus {
    #[sea_orm(string_value = "success")]
    Success,
    #[sea_orm(string_value = "failure")]
    Failure,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "event_phase")]
pub enum EventPhase {
    #[sea_orm(string_value = "pending")]
    Pending,
    #[sea_orm(string_value = "shuffling")]
    Shuffling,
    #[sea_orm(string_value = "dealing")]
    Dealing,
    #[sea_orm(string_value = "betting")]
    Betting,
    #[sea_orm(string_value = "reveals")]
    Reveals,
    #[sea_orm(string_value = "showdown")]
    Showdown,
    #[sea_orm(string_value = "complete")]
    Complete,
    #[sea_orm(string_value = "cancelled")]
    Cancelled,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "game_status")]
pub enum GameStatus {
    #[sea_orm(string_value = "onboarding")]
    Onboarding,
    #[sea_orm(string_value = "active")]
    Active,
    #[sea_orm(string_value = "closed")]
    Closed,
    #[sea_orm(string_value = "archived")]
    Archived,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "hand_status")]
pub enum HandStatus {
    #[sea_orm(string_value = "pending")]
    Pending,
    #[sea_orm(string_value = "shuffling")]
    Shuffling,
    #[sea_orm(string_value = "dealing")]
    Dealing,
    #[sea_orm(string_value = "betting")]
    Betting,
    #[sea_orm(string_value = "showdown")]
    Showdown,
    #[sea_orm(string_value = "complete")]
    Complete,
    #[sea_orm(string_value = "cancelled")]
    Cancelled,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "phase_kind")]
pub enum PhaseKind {
    #[sea_orm(string_value = "shuffling")]
    Shuffling,
    #[sea_orm(string_value = "dealing")]
    Dealing,
    #[sea_orm(string_value = "betting")]
    Betting,
    #[sea_orm(string_value = "reveals")]
    Reveals,
}
